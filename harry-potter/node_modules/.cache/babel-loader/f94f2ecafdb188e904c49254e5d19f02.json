{"ast":null,"code":"var _jsxFileName = \"/Users/igi/Documents/GitHub/Harry-Potter/harry-potter/src/components/Staff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Staff = () => {\n  _s();\n\n  const [staff, setStaff] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchStaff = async (url, signal) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url, {\n        signal\n      });\n\n      if (res.status !== 200) {\n        throw new Error(\"Something went wrong.\");\n      }\n\n      const data = await res.json();\n      setStaff(data);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const url = \"http://hp-api.herokuapp.com/api/characters/staff\";\n    const controller = new AbortController();\n    fetchStaff(url, controller.signal);\n    return () => {\n      controller.abort();\n    };\n  }, []);\n  let staffData = staff.map((character, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: staffData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading... please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Staff, \"6jlg/qvTjFo29lDlpDSowrp4+Rk=\");\n\n_c = Staff;\nexport default Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"names":["React","useState","useEffect","Staff","staff","setStaff","isLoading","setIsLoading","error","setError","fetchStaff","url","signal","res","fetch","status","Error","data","json","err","message","controller","AbortController","abort","staffData","map","character","index","image","name"],"sources":["/Users/igi/Documents/GitHub/Harry-Potter/harry-potter/src/components/Staff.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Staff = () => {\n  const [staff, setStaff] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchStaff = async (url, signal) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url, { signal });\n\n      if (res.status !== 200) {\n        throw new Error(\"Something went wrong.\");\n      }\n\n      const data = await res.json();\n\n      setStaff(data);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const url = \"http://hp-api.herokuapp.com/api/characters/staff\";\n\n    const controller = new AbortController();\n    fetchStaff(url, controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  let staffData = staff.map((character, index) => {\n    return (\n      <div key={index}>\n        <img src={character.image} alt={character.name} />\n        <p>{character.name}</p>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <h1>Staff</h1>\n      {!isLoading && <div>{staffData}</div>}\n      {isLoading && <p>Loading... please wait</p>}\n      {!isLoading && error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default Staff;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMS,UAAU,GAAG,OAAOC,GAAP,EAAYC,MAAZ,KAAuB;IACxCL,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IAEA,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;QAAEC;MAAF,CAAN,CAAvB;;MAEA,IAAIC,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;QACtB,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MACD;;MAED,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;MAEAb,QAAQ,CAACY,IAAD,CAAR;IACD,CAVD,CAUE,OAAOE,GAAP,EAAY;MACZV,QAAQ,CAACU,GAAG,CAACC,OAAL,CAAR;IACD;;IAEDb,YAAY,CAAC,KAAD,CAAZ;EACD,CAnBD;;EAqBAL,SAAS,CAAC,MAAM;IACd,MAAMS,GAAG,GAAG,kDAAZ;IAEA,MAAMU,UAAU,GAAG,IAAIC,eAAJ,EAAnB;IACAZ,UAAU,CAACC,GAAD,EAAMU,UAAU,CAACT,MAAjB,CAAV;IAEA,OAAO,MAAM;MACXS,UAAU,CAACE,KAAX;IACD,CAFD;EAGD,CATQ,EASN,EATM,CAAT;EAWA,IAAIC,SAAS,GAAGpB,KAAK,CAACqB,GAAN,CAAU,CAACC,SAAD,EAAYC,KAAZ,KAAsB;IAC9C,oBACE;MAAA,wBACE;QAAK,GAAG,EAAED,SAAS,CAACE,KAApB;QAA2B,GAAG,EAAEF,SAAS,CAACG;MAA1C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIH,SAAS,CAACG;MAAd;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,GAAUF,KAAV;MAAA;MAAA;MAAA;IAAA,QADF;EAMD,CAPe,CAAhB;EASA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACrB,SAAD,iBAAc;MAAA,UAAMkB;IAAN;MAAA;MAAA;MAAA;IAAA,QAFjB,EAGGlB,SAAS,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHhB,EAIG,CAACA,SAAD,IAAcE,KAAd,iBAAuB;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAJ1B;EAAA,gBADF;AAQD,CAvDD;;GAAML,K;;KAAAA,K;AAyDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
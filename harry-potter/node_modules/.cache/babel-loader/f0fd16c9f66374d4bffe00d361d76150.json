{"ast":null,"code":"var _jsxFileName = \"/Users/igi/Documents/GitHub/Harry-Potter/harry-potter/src/components/Characters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Character from \"./Character\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Characters = () => {\n  _s();\n\n  const [findCharacter, setFindCharacter] = useState(\"\");\n  const [charactersAlphabetical, setCharactersAlphabetical] = useState([]);\n  const [characters, setCharacters] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchCharacters = async (url, signal) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url, {\n        signal\n      });\n\n      if (res.status !== 200) {\n        throw new Error(\"Something went wrong.\");\n      }\n\n      const data = await res.json();\n      const dataAlphabetical = JSON.parse(JSON.stringify(data)); // console.log(data, dataAlphabetical);\n\n      dataAlphabetical.sort(function (a, b) {\n        const nameA = a.name.toUpperCase(); // ignore upper and lowercase\n\n        const nameB = b.name.toUpperCase(); // ignore upper and lowercase\n\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        if (nameA > nameB) {\n          return 1;\n        } // names must be equal\n\n\n        return 0;\n      });\n      setCharactersAlphabetical(dataAlphabetical);\n      setCharacters(data);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const url = \"http://hp-api.herokuapp.com/api/characters\";\n    const controller = new AbortController();\n    fetchCharacters(url, controller.signal);\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const handleCharacterChange = event => {\n    setFindCharacter(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Harry Potter Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"character\",\n          children: \"Find Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"character\",\n          type: \"text\",\n          value: findCharacter,\n          onChange: handleCharacterChange,\n          list: \"characters\",\n          placeholder: \"Select a character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"characters\",\n          children: charactersAlphabetical.map((character, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: character.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Random Character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Character, {\n      characters: characters,\n      findCharacter: findCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Characters, \"E+p10ybiM+Yffunc6MzcRWS8DIs=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"names":["React","useState","useEffect","Character","Characters","findCharacter","setFindCharacter","charactersAlphabetical","setCharactersAlphabetical","characters","setCharacters","isLoading","setIsLoading","error","setError","fetchCharacters","url","signal","res","fetch","status","Error","data","json","dataAlphabetical","JSON","parse","stringify","sort","a","b","nameA","name","toUpperCase","nameB","err","message","controller","AbortController","abort","handleCharacterChange","event","target","value","map","character","index"],"sources":["/Users/igi/Documents/GitHub/Harry-Potter/harry-potter/src/components/Characters.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Character from \"./Character\";\n\nconst Characters = () => {\n  const [findCharacter, setFindCharacter] = useState(\"\");\n  const [charactersAlphabetical, setCharactersAlphabetical] = useState([]);\n  const [characters, setCharacters] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchCharacters = async (url, signal) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url, { signal });\n\n      if (res.status !== 200) {\n        throw new Error(\"Something went wrong.\");\n      }\n\n      const data = await res.json();\n      const dataAlphabetical = JSON.parse(JSON.stringify(data));\n      // console.log(data, dataAlphabetical);\n      dataAlphabetical.sort(function (a, b) {\n        const nameA = a.name.toUpperCase(); // ignore upper and lowercase\n        const nameB = b.name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        // names must be equal\n        return 0;\n      });\n      setCharactersAlphabetical(dataAlphabetical);\n      setCharacters(data);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const url = \"http://hp-api.herokuapp.com/api/characters\";\n\n    const controller = new AbortController();\n    fetchCharacters(url, controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const handleCharacterChange = (event) => {\n    setFindCharacter(event.target.value);\n  };\n\n  return (\n    <>\n      <h1>Harry Potter Characters</h1>\n      <form>\n        <div>\n          <label htmlFor=\"character\">Find Character</label>\n        </div>\n        <div>\n          <input\n            id=\"character\"\n            type=\"text\"\n            value={findCharacter}\n            onChange={handleCharacterChange}\n            list=\"characters\"\n            placeholder=\"Select a character\"\n          ></input>\n          <datalist id=\"characters\">\n            {charactersAlphabetical.map((character, index) => {\n              return <option value={character.name} key={index} />;\n            })}\n          </datalist>\n        </div>\n        <button>Random Character</button>\n      </form>\n      <Character\n        characters={characters}\n        findCharacter={findCharacter}\n      ></Character>\n    </>\n  );\n};\n\nexport default Characters;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}